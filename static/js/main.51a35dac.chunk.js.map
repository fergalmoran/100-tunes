{"version":3,"sources":["components/TuneTitle.tsx","components/TuneList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TuneTitle","props","url","MixList","useState","tunes","setTunes","useEffect","a","fetch","process","json","mixes","console","error","getData","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","Avatar","alt","title","src","image","Link","href","color","variant","id","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","App","classes","Fragment","CssBaseline","AppBar","position","Toolbar","className","Typography","noWrap","Container","maxWidth","TuneList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAMeA,EAJG,SAACC,GACf,OAAO,mCAAGA,EAAMC,OC6DLC,EAnDC,WAAO,IAAD,EACQC,mBAAiB,IADzB,mBACXC,EADW,KACJC,EADI,KAgBlB,OAdAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAGEC,MAAM,GAAD,OAAIC,aAAJ,qBAHP,8BAINC,OAJM,OAEFC,EAFE,OAKRN,EAASM,GALD,gDAORC,QAAQC,MAAM,WAAY,UAA1B,MAPQ,yDAAH,qDAUbC,KACD,IAGC,8BACI,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAZ,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAM,UACjB,cAACD,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,wBAGR,cAACE,EAAA,EAAD,UACKjB,EAAMkB,KAAI,SAACC,GAAD,OACP,eAACL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACI,cAACI,EAAA,EAAD,CAAQC,IAAKF,EAAIG,MAAOC,IAAKJ,EAAIK,UAErC,cAACT,EAAA,EAAD,UACI,cAAC,EAAD,CAAWlB,IAAKsB,EAAIG,UAExB,cAACP,EAAA,EAAD,UACI,cAACU,EAAA,EAAD,CACIC,KAAMP,EAAItB,IACV8B,MAAM,UACNC,QAAQ,QAHZ,sBAROT,EAAIU,e,iBC3BrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,YAAaF,EAAMG,QAAQ,IAE/BC,YAAa,CACTC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,QAAST,EAAMG,QAAQ,EAAG,EAAG,IAEjCO,YAAa,CACTC,UAAWX,EAAMG,QAAQ,IAE7BS,SAAU,CACNC,WAAYb,EAAMG,QAAQ,GAC1BW,cAAed,EAAMG,QAAQ,IAEjCY,KAAM,CACFC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEnBC,UAAW,CACPN,WAAY,UAEhBO,YAAa,CACTC,SAAU,GAEdC,OAAQ,CACJjB,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,QAAST,EAAMG,QAAQ,QA0BhBoB,MAtBf,WACI,IAAMC,EAAU1B,IAChB,OACI,eAAC,IAAM2B,SAAP,WACI,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,WAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAWC,UAAWN,EAAQvB,OAC9B,cAAC8B,EAAA,EAAD,CAAYnC,QAAQ,KAAKD,MAAM,UAAUqC,QAAM,EAA/C,+BAKR,+BACI,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAACC,EAAD,YC/CLC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51a35dac.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TuneTitle = (props: { url: string }) => {\n    return <>{props.url}</>;\n};\n\nexport default TuneTitle;\n","import {\n    Avatar,\n    Link,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Tune from \"../models/tune\";\nimport TuneTitle from \"./TuneTitle\";\n\nconst MixList = () => {\n    const [tunes, setTunes] = useState<Tune[]>([]);\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                const mixes: Tune[] = await (\n                    await fetch(`${process.env.PUBLIC_URL}/data/tunes.json`)\n                ).json();\n                setTunes(mixes);\n            } catch (err) {\n                console.error(\"TuneList\", \"getData\", err);\n            }\n        };\n        getData();\n    }, []);\n\n    return (\n        <div>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"right\"></TableCell>\n                        <TableCell>Title</TableCell>\n                        <TableCell>Link</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {tunes.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell align=\"center\">\n                                <Avatar alt={row.title} src={row.image} />\n                            </TableCell>\n                            <TableCell>\n                                <TuneTitle url={row.title} />\n                            </TableCell>\n                            <TableCell>\n                                <Link\n                                    href={row.url}\n                                    color=\"inherit\"\n                                    variant=\"body2\"\n                                >\n                                    Open\n                                </Link>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\nexport default MixList;\n","import {\n    AppBar,\n    Container,\n    CssBaseline,\n    makeStyles,\n    Toolbar,\n    Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./App.css\";\nimport TuneList from \"./components/TuneList\";\nimport AlbumIcon from \"@material-ui/icons/Album\";\nimport { Tune } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"relative\">\n                <Toolbar>\n                    <AlbumIcon className={classes.icon} />\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        100 Tunes!!!\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <main>\n                <Container maxWidth=\"xl\">\n                    <TuneList />\n                </Container>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}